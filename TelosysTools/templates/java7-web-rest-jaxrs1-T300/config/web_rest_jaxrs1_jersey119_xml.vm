<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://java.sun.com/xml/ns/javaee" 
         xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd" 
         id="WebApp_ID" version="3.0">

#set($REST_ROOT = "/api/v1" )
	<display-name>${fn.get("PROJECT_NAME","to.be.defined")}</display-name>
  
	<!-- JAX-RS 1 with JERSEY 1.x IMPLEMENTATION -->
	<servlet>
		<servlet-name>Jersey</servlet-name>
		<servlet-class>com.sun.jersey.spi.container.servlet.ServletContainer</servlet-class>
		<init-param>
			<!-- Project packages to be scanned to find REST controller classes -->
			<param-name>com.sun.jersey.config.property.packages</param-name>
			<!-- Define here the package where your REST controller classes are located -->
			<param-value>${ROOT_PKG}.web.rest.jaxrs</param-value> 
		</init-param>
		<init-param>
			<!-- To make Jersey support JSON/object mapping -->
			<param-name>com.sun.jersey.api.json.POJOMappingFeature</param-name>
			<param-value>true</param-value>
		</init-param>
		<load-on-startup>1</load-on-startup>
	</servlet>
	<servlet-mapping>
		<servlet-name>Jersey</servlet-name>
		<url-pattern>${REST_ROOT}/*</url-pattern>
	</servlet-mapping>

	<!-- Servlet filter to remove HTTP caching for REST resources -->
	<filter>
		<filter-name>CacheFilter</filter-name>
		<filter-class>${ROOT_PKG}.web.rest.commons.CacheFilter</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>CacheFilter</filter-name>
		<url-pattern>${REST_ROOT}/*</url-pattern>
	</filter-mapping>

</web-app>
